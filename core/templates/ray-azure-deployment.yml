# An unique identifier for the head node and workers of this cluster.
cluster_name: dev

# The minimum number of workers nodes to launch in addition to the head
# node. This number should be >= 0.
min_workers: 0

# The maximum number of workers nodes to launch in addition to the head
# node. This takes precedence over min_workers.
max_workers: 0

# The initial number of worker nodes to launch in addition to the head
# node. When the cluster is first brought up (or when it is refreshed with a
# subsequent `ray up`) this number of nodes will be started.
initial_workers: 0

# Whether or not to autoscale aggressively. If this is enabled, if at any point
#   we would start more workers, we start at least enough to bring us to
#   initial_workers.
autoscaling_mode: default

# This executes all commands on all nodes in the docker container,
# and opens all the necessary ports to support the Ray cluster.
# Empty string means disabled.
docker:
    image: "andrijazz/playground"
    container_name: "playground" # e.g. ray_docker
    pull_before_run: False
    run_options:
        - --gpus all
        - --shm-size=256GB
        - -v /home/ubuntu/playground:/opt/playground
        - -v /mnt/storage/playground/:/tmp/playground/
        - -v /tmp/ray_tmp_mount//home/ubuntu/.ssh:/root/.ssh


    # # Example of running a GPU head with CPU workers
    # head_image: "rayproject/ray:0.8.7-gpu"

    # worker_image: "rayproject/ray:0.8.7"

initialization_commands:
    #- curl -fsSL https://get.docker.com -o get-docker.sh
    #- sudo sh get-docker.sh
    - sudo usermod -aG docker $USER
    - sudo systemctl restart docker -f
    #- newgrp docker
    # - echo <DOCKER_PASS> | docker login --username <DOCKER_USERNAME> --password-stdin
    # checkout the code
    - ssh-keygen -F github.com || ssh-keyscan github.com >> ~/.ssh/known_hosts
    - sudo rm -r ~/playground || true
    - sudo cp /tmp/ray_tmp_mount/home/$USER/.ssh/id_rsa /home/$USER/.ssh
    - sudo cp /tmp/ray_tmp_mount/home/$USER/.ssh/id_rsa.pub /home/$USER/.ssh
    - sudo chown $USER:$USER /home/$USER/.ssh/id_rsa
    - sudo chown $USER:$USER /home/$USER/.ssh/id_rsa.pub
    - chmod 600 /home/$USER/.ssh/id_rsa
    - chmod 644 /home/$USER/.ssh/id_rsa.pub
    - git clone git@github.com:andrijazz/playground.git
    # https://fabianlee.org/2016/09/07/git-calling-git-clone-using-password-with-special-character/
    # init env
    - sudo mkdir -p /mnt/storage/playground; sudo chown $USER:$USER -R /mnt/storage
    - cd ~/playground; bash init_env.sh playground /mnt/storage <WANDB_API_KEY> <AZURE_SAS_TOKEN>
# The autoscaler will scale up the cluster to this target fraction of resource
# usage. For example, if a cluster of 10 nodes is 100% busy and
# target_utilization is 0.8, it would resize the cluster to 13. This fraction
# can be decreased to increase the aggressiveness of upscaling.
# This value must be less than 1.0 for scaling to happen.
target_utilization_fraction: 0.8

# If a node is idle for this many minutes, it will be removed.
idle_timeout_minutes: 15

# Cloud-provider specific configuration.
provider:
    type: azure
    # location: southcentralus
    location: eastus
    # set subscription id otherwise the default from az cli will be used
    subscription_id: <SUBSCRIPTION_ID>
    resource_group: dev

# How Ray will authenticate with newly launched nodes.
auth:
    ssh_user: ubuntu
    # you must specify paths to matching private and public key pair files
    # use `ssh-keygen -t rsa -b 4096` to generate a new ssh key pair
    ssh_private_key: ~/.ssh/id_rsa
    ssh_public_key: ~/.ssh/id_rsa.pub

# Files or directories to copy to the head and worker nodes. The format is a
# dictionary from REMOTE_PATH: LOCAL_PATH, e.g.
file_mounts: {
    "/home/ubuntu/.ssh/id_rsa": "~/.ssh/id_rsa",
    "/home/ubuntu/.ssh/id_rsa.pub": "~/.ssh/id_rsa.pub"
}

# Provider-specific config for the head node, e.g. instance type. By default
# Ray will auto-configure unspecified fields using example-full.yaml
head_node:
    azure_arm_parameters:
        vmSize: Standard_NC24s_v3
        # List images https://docs.microsoft.com/en-us/azure/virtual-machines/linux/cli-ps-findimage
        imagePublisher: microsoft-dsvm
        imageOffer: ubuntu-1804
        imageSku: "1804-gen2"
        imageVersion: 20.07.06

#        vmSize: Standard_NC24
#        imagePublisher: microsoft-dsvm
#        imageOffer: ubuntu-1804
#        imageSku: "1804"
#        imageVersion: 20.07.06
        # optionally set priority to use Spot instances
#        priority: Spot

#        vmSize: Standard_NC6_Promo
#        imagePublisher: microsoft-dsvm
#        imageOffer: ubuntu-1804
#        imageSku: "1804"
#        imageVersion: 20.07.06
        # optionally set priority to use Spot instances
#        priority: Spot


# Provider-specific config for worker nodes, e.g. instance type. By default
# Ray will auto-configure unspecified fields using example-full.yaml
worker_nodes:
    azure_arm_parameters:
#        vmSize: Standard_ND40rs_v2
#        # List images https://docs.microsoft.com/en-us/azure/virtual-machines/linux/cli-ps-findimage
#        imagePublisher: microsoft-dsvm
#        imageOffer: ubuntu-1804
#        imageSku: "1804-gen2"
#        imageVersion: 20.07.06
        vmSize: Standard_NC24
        imagePublisher: microsoft-dsvm
        imageOffer: ubuntu-1804
        imageSku: "1804"
        imageVersion: 20.07.06
        # optionally set priority to use Spot instances
        priority: Spot

# List of shell commands to run to set up nodes.
# NOTE: rayproject/ray:0.8.7 has ray 0.8.7 bundled
setup_commands: []

# Custom commands that will be run on the head node after common setup.
head_setup_commands: []
#    - pip install azure-cli-core==2.4.0 azure-mgmt-compute==12.0.0 azure-mgmt-msi==1.0.0 azure-mgmt-network==10.1.0

# Custom commands that will be run on worker nodes after common setup.
worker_setup_commands: []

# Command to start ray on the head node. You don't need to change this.
head_start_ray_commands:
    - ray stop
    - ulimit -n 65536; ray start --head --port=6379 --object-manager-port=8076 --autoscaling-config=~/ray_bootstrap_config.yaml --dashboard-host=0.0.0.0

# Command to start ray on worker nodes. You don't need to change this.
worker_start_ray_commands:
    - ray stop
    - ulimit -n 65536; ray start --address=$RAY_HEAD_IP:6379 --object-manager-port=8076
