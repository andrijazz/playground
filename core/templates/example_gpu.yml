# An unique identifier for the head node and workers of this cluster.
cluster_name: default

# The minimum number of workers nodes to launch in addition to the head
# node. This number should be >= 0.
min_workers: 1

# The maximum number of workers nodes to launch in addition to the head
# node. This takes precedence over min_workers.
max_workers: 2

# The initial number of worker nodes to launch in addition to the head
# node. When the cluster is first brought up (or when it is refreshed with a
# subsequent `ray up`) this number of nodes will be started.
initial_workers: 1

# Whether or not to autoscale aggressively. If this is enabled, if at any point
#   we would start more workers, we start at least enough to bring us to
#   initial_workers.
autoscaling_mode: default

# This executes all commands on all nodes in the docker container,
# and opens all the necessary ports to support the Ray cluster.
# Empty string means disabled.
docker:
    image: "" # e.g., tensorflow/tensorflow:1.5.0-py3
    container_name: "" # e.g. ray_docker
    # If true, pulls latest version of image. Otherwise, `docker run` will only pull the image
    # if no cached version is present.
    pull_before_run: True
    run_options: []  # Extra options to pass into "docker run"

    # Example of running a GPU head with CPU workers
    # head_image: "tensorflow/tensorflow:1.13.1-py3"
    # head_run_options:
    #     - --runtime=nvidia

    # worker_image: "ubuntu:18.04"
    # worker_run_options: []

# The autoscaler will scale up the cluster to this target fraction of resource
# usage. For example, if a cluster of 10 nodes is 100% busy and
# target_utilization is 0.8, it would resize the cluster to 13. This fraction
# can be decreased to increase the aggressiveness of upscaling.
# This value must be less than 1.0 for scaling to happen.
target_utilization_fraction: 0.5

# If a node is idle for this many minutes, it will be removed.
idle_timeout_minutes: 15

# Cloud-provider specific configuration.
provider:
    type: azure
    # https://azure.microsoft.com/en-us/global-infrastructure/locations
    location: eastus
    resource_group: ray-cluster
    # set subscription id otherwise the default from az cli will be used
    subscription_id: ???

# How Ray will authenticate with newly launched nodes.
auth:
    ssh_user: ubuntu
    # you must specify paths to matching private and public key pair files
    # use `ssh-keygen -t rsa -b 4096` to generate a new ssh key pair
    ssh_private_key: ~/.ssh/id_rsa
    ssh_public_key: ~/.ssh/id_rsa.pub

# Provider-specific config for the head node, e.g. instance type. By default
# Ray will auto-configure unspecified fields using example-full.yaml
head_node:
    azure_arm_parameters:
        vmSize: Standard_NC24
        # List images https://docs.microsoft.com/en-us/azure/virtual-machines/linux/cli-ps-findimage
        imagePublisher: microsoft-dsvm
        imageOffer: ubuntu-1804
        imageSku: "1804"
        imageVersion: 20.02.01

# Provider-specific config for worker nodes, e.g. instance type. By default
# Ray will auto-configure unspecified fields using example-full.yaml
worker_nodes:
    azure_arm_parameters:
        vmSize: Standard_NC24
        # List images https://docs.microsoft.com/en-us/azure/virtual-machines/linux/cli-ps-findimage
        imagePublisher: microsoft-dsvm
        imageOffer: ubuntu-1804
        imageSku: "1804"
        imageVersion: 20.02.01

# Files or directories to copy to the head and worker nodes. The format is a
# dictionary from REMOTE_PATH: LOCAL_PATH, e.g.

file_mounts: {
    "/home/ubuntu/.ssh/id_rsa": "~/.ssh/id_rsa",
    "/home/ubuntu/.ssh/id_rsa.pub": "~/.ssh/id_rsa.pub"
}

# List of commands that will be run before `setup_commands`. If docker is
# enabled, these commands will run outside the container and before docker
# is setup.
initialization_commands:
    # get rid of annoying Ubuntu message
    - touch ~/.sudo_as_admin_successful

# List of shell commands to run to set up nodes.
setup_commands:
    # remove anaconda
    - sudo rm -rf /anaconda/ || true
    # set default python to 3.6
    - sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1
    - sudo apt-get update
    - sudo apt-get -y install python3-pip
    - pip3 install --user pipenv
    - sudo cp ~/.local/bin/pipenv /usr/bin/
    - sudo mkdir /mnt/storage || true
    - sudo chown $USER:$USER -R /mnt/storage
    - ssh-keygen -F github.com || ssh-keyscan github.com >> ~/.ssh/known_hosts
    - git clone git@github.com:andrijazz/playground.git
    - cd ~/playground; bash init_env.sh playground /mnt/storage/ wandb_id; pipenv install
    - echo 'cd ~/playground && source $(pipenv --venv)/bin/activate' >> ~/.bashrc

# Custom commands that will be run on the head node after common setup.
head_setup_commands: []

# Custom commands that will be run on worker nodes after common setup.
worker_setup_commands: []

# Command to start ray on the head node. You don't need to change this.
head_start_ray_commands:
    - ray stop
    - ulimit -n 65536; ray start --head --port=6379 --object-manager-port=8076 --autoscaling-config=~/ray_bootstrap_config.yaml --include-webui True --webui-host=0.0.0.0

# Command to start ray on worker nodes. You don't need to change this.
worker_start_ray_commands:
    - ray stop
    - ulimit -n 65536; ray start --address=$RAY_HEAD_IP:6379 --object-manager-port=8076
